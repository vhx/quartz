// TODO:  Check out what these are doing.

$arrow-colors: $navy, $white, $gray-1, $gray-2, $red, $teal-1, $teal-2;
$arrow-classes: 'bg-navy', 'bg-white', 'bg-gray-1', 'bg-gray-2', 'bg-red', 'bg-teal-1', 'bg-teal-2';

// RANGES
// We use these functions to define ranges for various things, like media queries.
@function lower-bound($range) {
  @if length($range) <= 0 {
    @return 0;
  }
  @return nth($range, 1);
}

@function upper-bound($range) {
  @if length($range) < 2 {
    @return 999999999999;
  }
  @return nth($range, 2);
}

@mixin arrow-colors($position) {
  $primary-pos: bottom;
  $secondary-pos: top;
  $tertiary-pos: left;
  $pos: left, middle, right;

  @if $position == top {
    $primary-pos: top;
    $secondary-pos: bottom;
    $tertiary-pos: left;
    $pos: left, middle, right;
  } @else if $position == right {
    $primary-pos: right;
    $secondary-pos: left;
    $tertiary-pos: bottom;
    $pos: top, middle, bottom;
  } @else if $position == left {
    $primary-pos: left;
    $secondary-pos: right;
    $tertiary-pos: top;
    $pos: top, middle, bottom;
  }

  &.arrow-#{$primary-pos}-#{nth($pos, 1)},
  &.arrow-#{$primary-pos}-#{nth($pos, 2)},
  &.arrow-#{$primary-pos}-#{nth($pos, 3)} {
    &:after {
      border-#{$secondary-pos}-color: #192b3d;
      margin-#{$tertiary-pos}: -10px;
    }
    &:before {
      border-#{$secondary-pos}-right-color: #192b3d;
      margin-#{$tertiary-pos}: -11px;
    }

    @for $i from 1 through length($arrow-colors) {
      $arrow-color: nth($arrow-colors, $i);
      $arrow-class: nth($arrow-classes, $i);
      &.#{$arrow-class} {
        background: $arrow-color;
        &:after {
          border-#{$secondary-pos}-color: $arrow-color;
        }
        &:before {
          border-#{$secondary-pos}-color: $arrow-color;
        }
      }
    }
  }
}

@mixin cf() {
  &:after {
    clear: both;
  }
  &:before,
  &:after {
    content: " ";
    display: table;
  }
}

@mixin arrow($color, $color-rgb, $border-color, $border-color-rgb, $border-width, $width, $side) {
  position: relative;
  background: $color;
  border: #{$border-width}px solid $border-color;

  &:after, &:before {
    border: solid transparent;
    content: " ";
    height: 0;
    width: 0;
    position: absolute;
    pointer-events: none;
  }
  @if $side == 'left' {
    &:after {
      border-color: $color-rgb;
      border-right-color: $border-color;
      border-width: #{$width}px;
      margin-top: -#{$width}px;
    }
    &:before {
      border-color: $color-rgb;
      border-right-color: $border-color;
      border-width: #{$width+1}px;
      margin-top: -#{$width+1}px;
    }
  }
  @if $side == 'top' {
    &:after {
      border-color: $color-rgb;
      border-bottom-color: $border-color;
      border-width: #{$width}px;
      margin-left: -#{$width}px;
    }
    &:before {
      border-color: $color-rgb;
      border-bottom-color: $border-color;
      border-width: #{$width+1}px;
      margin-left: -#{$width+1}px;
    }
  }
  @if $side == 'right' {
    &:after, &:before {
      left: 100%;
      top: 50%;
    }
    &:after {
      border-color: $color-rgb;
      border-left-color: $color;
      border-width: #{$width}px;
      margin-top: -#{$width}px;
    }
    &:before {
      border-color: $border-color-rgb;
      border-left-color: $border-color;
      border-width: #{$width+1}px;
      margin-top: -#{$width+1}px;
    }
  }
  @if $side == 'bottom' {
    &:after {
      border-color: $border-color;
      border-top-color: $border-color;
      border-width: #{$width}px;
      margin-left: -#{$width}px;
    }
    &:before {
      border-color: $border-color;
      border-top-color: $border-color;
      border-width: #{$width+1}px;
      margin-left: -#{$width+1}px;
    }
  }
}

// easier form input placeholder styling
// usage:
// .input-class {
//   @include placeholder {
//     property: value;
//   }
// }
@mixin placeholder {
  &::-webkit-input-placeholder {
    @content;
  }
  &:-moz-placeholder {
    @content;
    // manually overwrite FF's default opacity: .54
    // on placeholders!
    opacity: 1;
  }
  &::-moz-placeholder {
    @content;
    // manually overwrite FF's default opacity: .54
    // on placeholders!
    opacity: 1;
  }
  &:-ms-input-placeholder {
    @content;
  }
}

/* helper function for margin and padding
......................................*/
@function set_spacer_size($name) {
  $size: 25px;
  @if $name == 'xsmall' {
    $size: 5px;
  } @else if $name == 'small' {
    $size: 10px;
  } @else if $name == 'medium' {
    $size: 20px;
  } @else if $name == 'large' {
    $size: 40px;
  } @else if $name == 'xlarge' {
    $size: 80px;
  } @else if $name == 'xxlarge' {
    $size: 160px;
  }

  @return $size;
}
@function set_frame_size($name) {
  $size: 75px;

  @if $name == 'small' {
    $size: 75px;
  } @else if $name == 'medium' {
    $size: 125px;
  } @else if $name == 'large' {
    $size: 325px;
  } @else if $name == 'xlarge' {
    $size: 525px;
  }

  @return $size;
}

@mixin spacer($type, $name, $style, $media) {
  @if $type == 'vert' {
    .#{$media}#{$style}-vert-#{$name} {
      #{$style}-top: set-spacer-size($name);
      #{$style}-bottom: set-spacer-size($name);
    }
  }
  @else if $type == 'horz' {
    .#{$media}#{$style}-horz-#{$name} {
      #{$style}-left: set-spacer-size($name);
      #{$style}-right: set-spacer-size($name);
    }
  }
  @else {
    @if $type != '' {
      $type: '-' + $type;
    }
    .#{$media}#{$style}#{$type}-#{$name} {
      #{$style}#{$type}: set-spacer-size($name);
    }
  }
}

 /*.....................................
   BUTTON MIXINS
 ......................................*/

 /* button colors
 ......................................*/
 @mixin button-colors($background, $background-hover, $color, $color-hover, $border-color, $border-color-hover, $loader) {
   background-color: $background;
   color: $color;
   border: 1px solid $border-color;
   background-size: 15px 15px;

   // states
   &:link,
   &:visited {
     color: $color;
     border: 1px solid $border-color;
   }

   &:hover,
   &.is-hover,
   &:focus:hover,
   &:focus.is-hover {
     color: $color-hover;
     cursor: pointer;
     background-color: $background-hover;
     border: 1px solid $border-color-hover;
   }

   &:active,
   &.is-active,
   &:focus,
   &.is-focus  {
     color: $color-hover;
     background-color: $background;
     border: 1px solid $border-color;
   }

   &.is-selected {
     color: $color-hover;
     cursor: pointer;
     background-color: $background-hover;
     border: 1px solid $border-color-hover;
   }

   &[disabled],
   &.is-disabled {
     opacity: .5;
     background-color: $background;
     color: $color;
     border: 1px solid $border-color;

     &:visited,
     &:hover,
     &.is-hover,
     &:active,
     &.is-active {
       background-color: $background;
       color: $color;
       border: 1px solid $border-color;
     }
   }

   &.is-processing,
   &.processing,
   &.is-loading,
   &.loading {
     background-position: center center !important;
     color: transparent !important;
     background-image: url('data:image/svg+xml;charset=utf-8,%3Csvg%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%20x%3D%220px%22%20y%3D%220px%22%0D%0A%20%20viewBox%3D%220%200%2040%2040%22%20xml%3Aspace%3D%22preserve%22%3E%0D%0A%3Cpath%20opacity%3D%220.2%22%20fill%3D%22%23#{$loader}%22%20d%3D%22M20.201%2C5.169c-8.254%2C0-14.946%2C6.692-14.946%2C14.946c0%2C8.255%2C6.692%2C14.946%2C14.946%2C14.946%0D%0A%20%20s14.946-6.691%2C14.946-14.946C35.146%2C11.861%2C28.455%2C5.169%2C20.201%2C5.169z%20M20.201%2C31.749c-6.425%2C0-11.634-5.208-11.634-11.634%0D%0A%20%20c0-6.425%2C5.209-11.634%2C11.634-11.634c6.425%2C0%2C11.633%2C5.209%2C11.633%2C11.634C31.834%2C26.541%2C26.626%2C31.749%2C20.201%2C31.749z%22%2F%3E%0D%0A%3Cpath%20fill%3D%22%23#{$loader}%22%20d%3D%22M26.013%2C10.047l1.654-2.866c-2.198-1.272-4.743-2.012-7.466-2.012h0v3.312h0%0D%0A%20%20C22.32%2C8.481%2C24.301%2C9.057%2C26.013%2C10.047z%22%3E%0D%0A%20%20%3CanimateTransform%20attributeType%3D%22xml%22%0D%0A%20%20%20%20attributeName%3D%22transform%22%0D%0A%20%20%20%20type%3D%22rotate%22%0D%0A%20%20%20%20from%3D%220%2020%2020%22%0D%0A%20%20%20%20to%3D%22360%2020%2020%22%0D%0A%20%20%20%20dur%3D%220.5s%22%0D%0A%20%20%20%20repeatCount%3D%22indefinite%22%2F%3E%0D%0A%20%20%3C%2Fpath%3E%0D%0A%3C%2Fsvg%3E');
     background-repeat: no-repeat;
     background-size: 23px 23px;

     &.btn--small {
       background-size: 20px 20px;
     }
     &.btn--medium {
       background-size: 23px 23px;
     }
     &.btn--large {
       background-size: 45px 45px;
     }
   }
 }

 @mixin button-block-colors($color, $color-hover, $border-color) {
   color: $color;

   &:link,
   &:visited {
     color: $color;
   }

   &:hover,
   &.is-hover
   &:active,
   &.is-active {
     color: $color-hover;
     box-shadow: inset 0px -4px 0px $border-color;
   }
 }

 @mixin loader($loader) {
   position: relative;
   &:after {
     content: ' ';
     position: absolute;
     top: 50%;
     left: 50%;
     margin-left: -15px;
     margin-top: -15px;
     height: 30px;
     width: 30px;
     display: block;
     padding: 0;
     background-position: center center;
     background-size: contain;
     background-image: url('data:image/svg+xml;charset=utf-8,%3Csvg%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%20x%3D%220px%22%20y%3D%220px%22%0D%0A%20%20viewBox%3D%220%200%2040%2040%22%20xml%3Aspace%3D%22preserve%22%3E%0D%0A%3Cpath%20opacity%3D%220.2%22%20fill%3D%22%23#{$loader}%22%20d%3D%22M20.201%2C5.169c-8.254%2C0-14.946%2C6.692-14.946%2C14.946c0%2C8.255%2C6.692%2C14.946%2C14.946%2C14.946%0D%0A%20%20s14.946-6.691%2C14.946-14.946C35.146%2C11.861%2C28.455%2C5.169%2C20.201%2C5.169z%20M20.201%2C31.749c-6.425%2C0-11.634-5.208-11.634-11.634%0D%0A%20%20c0-6.425%2C5.209-11.634%2C11.634-11.634c6.425%2C0%2C11.633%2C5.209%2C11.633%2C11.634C31.834%2C26.541%2C26.626%2C31.749%2C20.201%2C31.749z%22%2F%3E%0D%0A%3Cpath%20fill%3D%22%23#{$loader}%22%20d%3D%22M26.013%2C10.047l1.654-2.866c-2.198-1.272-4.743-2.012-7.466-2.012h0v3.312h0%0D%0A%20%20C22.32%2C8.481%2C24.301%2C9.057%2C26.013%2C10.047z%22%3E%0D%0A%20%20%3CanimateTransform%20attributeType%3D%22xml%22%0D%0A%20%20%20%20attributeName%3D%22transform%22%0D%0A%20%20%20%20type%3D%22rotate%22%0D%0A%20%20%20%20from%3D%220%2020%2020%22%0D%0A%20%20%20%20to%3D%22360%2020%2020%22%0D%0A%20%20%20%20dur%3D%220.5s%22%0D%0A%20%20%20%20repeatCount%3D%22indefinite%22%2F%3E%0D%0A%20%20%3C%2Fpath%3E%0D%0A%3C%2Fsvg%3E');
   }
   &.loader--small:after {
     width: 16px;
     height: 16px;
     margin-left: -8px;
     margin-top: -8px;
   }
   &.loader--large:after {
     width: 46px;
     height: 46px;
     margin-left: -23px;
     margin-top: -23px;
   }
   &.loader--xlarge:after {
     width: 60px;
     height: 60px;
     margin-left: -30px;
     margin-top: -30px;
   }
 }

 @mixin loader_cover() {
   position: relative;
   &:after {
     display: none;
     content: initial !important;
   }
   &.is-processing,
   &.is-loading {
     &:after {
       display: block;
       content: ' ' !important;
     }
   }
 }

 /*.....................................
   HEADER BUTTON MIXINS
 ......................................*/

 // This may be short lived.

 @mixin header-button-colors($background, $background-hover, $color, $color-hover, $border-color, $border-color-hover, $loader) {
   background-color: $background;
   color: $color;
   border: 1px solid $border-color;
   background-size: nth($icon-size, $header-icon-small) nth($icon-size, $header-icon-small);

   // states
   &:link,
   &:visited {
     color: $color;
     border: 1px solid $border-color;
   }

   &:hover,
   &.is-hover,
   &:focus:hover,
   &:focus.is-hover,
   &.is-selected {
     color: $color-hover;
     cursor: pointer;
     background-color: $background-hover;
     border: 1px solid $border-color-hover;
   }

   &:active,
   &.is-active,
   &:focus,
   &.is-focus  {
     color: $color-hover;
     background-color: $background;
     border: 1px solid $border-color;
   }

   &[disabled],
   &.is-disabled {
     opacity: .5;
     background-color: $background;
     color: $color;
     border: 1px solid $border-color;

     &:visited,
     &:hover,
     &.is-hover,
     &:active,
     &.is-active {
       background-color: $background;
       color: $color;
       border: 1px solid $border-color;
     }
   }

   &.is-processing,
   &.processing,
   &.is-loading,
   &.loading {
     background-position: center center !important;
     color: transparent !important;
     background-image: url('data:image/svg+xml;charset=utf-8,%3Csvg%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%20x%3D%220px%22%20y%3D%220px%22%0D%0A%20%20viewBox%3D%220%200%2040%2040%22%20xml%3Aspace%3D%22preserve%22%3E%0D%0A%3Cpath%20opacity%3D%220.2%22%20fill%3D%22%23#{$loader}%22%20d%3D%22M20.201%2C5.169c-8.254%2C0-14.946%2C6.692-14.946%2C14.946c0%2C8.255%2C6.692%2C14.946%2C14.946%2C14.946%0D%0A%20%20s14.946-6.691%2C14.946-14.946C35.146%2C11.861%2C28.455%2C5.169%2C20.201%2C5.169z%20M20.201%2C31.749c-6.425%2C0-11.634-5.208-11.634-11.634%0D%0A%20%20c0-6.425%2C5.209-11.634%2C11.634-11.634c6.425%2C0%2C11.633%2C5.209%2C11.633%2C11.634C31.834%2C26.541%2C26.626%2C31.749%2C20.201%2C31.749z%22%2F%3E%0D%0A%3Cpath%20fill%3D%22%23#{$loader}%22%20d%3D%22M26.013%2C10.047l1.654-2.866c-2.198-1.272-4.743-2.012-7.466-2.012h0v3.312h0%0D%0A%20%20C22.32%2C8.481%2C24.301%2C9.057%2C26.013%2C10.047z%22%3E%0D%0A%20%20%3CanimateTransform%20attributeType%3D%22xml%22%0D%0A%20%20%20%20attributeName%3D%22transform%22%0D%0A%20%20%20%20type%3D%22rotate%22%0D%0A%20%20%20%20from%3D%220%2020%2020%22%0D%0A%20%20%20%20to%3D%22360%2020%2020%22%0D%0A%20%20%20%20dur%3D%220.5s%22%0D%0A%20%20%20%20repeatCount%3D%22indefinite%22%2F%3E%0D%0A%20%20%3C%2Fpath%3E%0D%0A%3C%2Fsvg%3E');
     background-repeat: no-repeat;
     background-size: 23px 23px;

     &.btn--small {
       background-size: 20px 20px;
     }
     &.btn--medium {
       background-size: 23px 23px;
     }
     &.btn--large {
       background-size: 45px 45px;
     }
   }
 }

 @mixin button-icon-position($position, $size-index) {
   @if $position == "center" {
     background-position: center center !important;
     color: transparent !important;
     padding: 0 20px !important;
     width: 40px;
     text-indent: -9999px;
   }

   @if $position == "left" {
     background-position: nth($icon-bg-horz-left-pos, $size-index) nth($icon-bg-vert-pos, $size-index);
     padding-left: nth($icon-padding-left, $size-index);
   }

   @if $position == "right" {
     background-position: right nth($icon-bg-horz-right-pos, $size-index) center;
     padding-right: nth($icon-padding-right, $size-index);
   }
 }
